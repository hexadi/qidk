#==============================================================================
#
#  Copyright (c) 2020-2023 Qualcomm Technologies, Inc.
#  All Rights Reserved.
#  Confidential and Proprietary - Qualcomm Technologies, Inc.
#
#==============================================================================

cmake_minimum_required (VERSION 3.14)
project (snpehelper)
set (APP "snpehelper")

set( APP_SOURCES
    "dllmain.cpp"
    "snpehelper.cpp"
    "SNPERuntime.cpp"
)
set (CHIPSET "QCS6490")
set (SNPE_ROOT "/root/AIStack/QAIRT/2.28.0.241029")
set (SNPE_INCLUDE_DIR "${SNPE_ROOT}/include/SNPE")
set (SNPE_LIB_PREFIX "${SNPE_ROOT}/lib")
set (_dtuple_POSTFIX "ubuntu-gcc9.4")
set (PYTHON_BASE_DIR "/root/venv")
set (PYTHON_INCLUDE_DIR "/usr/include/python3.10")
set (PYTHON_LIB_DIR "${PYTHON_BASE_DIR}/lib/python3.10")
set (PYBIND11_INCLUDE_DIR "${PYTHON_BASE_DIR}/lib/python3.10/site-packages/pybind11/include")

#set(RELEASE "Release/")
set(CMAKE_CXX_STANDARD 17)

message("Linking with QCS SNPE")
get_filename_component(SNPE_LIB_PATH "${SNPE_LIB_PREFIX}/aarch64-${_dtuple_POSTFIX}/libSNPE.so" REALPATH BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
get_filename_component(SNPE_HTP_PATH "${SNPE_LIB_PREFIX}/aarch64-${_dtuple_POSTFIX}/libSnpeHtpPrepare.so" REALPATH BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})

if(CHIPSET STREQUAL "QCS8550")
	message("QCS8550 is selected")
	get_filename_component(SNPE_STUB_PATH "${SNPE_LIB_PREFIX}/aarch64-${_dtuple_POSTFIX}/libSnpeHtpV73Stub.so" REALPATH BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
	get_filename_component(SNPE_SKEL_PATH "${SNPE_LIB_PREFIX}/hexagon-v73/unsigned/libSnpeHtpV73Skel.so" REALPATH BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
else()
	message("Default is selected")
	get_filename_component(SNPE_STUB_PATH "${SNPE_LIB_PREFIX}/aarch64-${_dtuple_POSTFIX}/libSnpeHtpV68Stub.so" REALPATH BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
	get_filename_component(SNPE_SKEL_PATH "${SNPE_LIB_PREFIX}/hexagon-v68/unsigned/libSnpeHtpV68Skel.so" REALPATH BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
endif()

add_library(SNPE SHARED IMPORTED)
set_target_properties(SNPE PROPERTIES
	INTERFACE_INCLUDE_DIRECTORIES ${SNPE_INCLUDE_DIR}
    IMPORTED_LOCATION ${SNPE_LIB_PATH}
)

include_directories(${SNPE_INCLUDE_DIR})
include_directories(${PYTHON_INCLUDE_DIR})
include_directories(${PYBIND11_INCLUDE_DIR})
link_directories(${PYTHON_LIB_DIR})

add_library(${APP} MODULE ${APP_SOURCES})

#target_compile_definitions(${APP} PUBLIC -DDEBUG)

target_link_libraries (${APP} PUBLIC SNPE)
